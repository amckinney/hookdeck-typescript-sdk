/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Hookdeck from "../../..";

/**
 * Filter properties for the events to be included in the bulk retry, use query parameters of [Requests](#requests)
 */
export interface RequestBulkRetryCreateRequestQuery {
    /** Filter by requests IDs */
    id?: Hookdeck.RequestBulkRetryCreateRequestQueryId;
    /** Filter by status */
    status?: Hookdeck.RequestBulkRetryCreateRequestQueryStatus;
    /** Filter by rejection cause */
    rejectionCause?: Hookdeck.RequestBulkRetryCreateRequestQueryRejectionCause;
    /** Filter by source IDs */
    sourceId?: Hookdeck.RequestBulkRetryCreateRequestQuerySourceId;
    /** Filter by verification status */
    verified?: boolean;
    /** URL Encoded string of the value to match partially to the body, headers, parsed_query or path */
    searchTerm?: string;
    /** URL Encoded string of the JSON to match to the data headers */
    headers?: Hookdeck.RequestBulkRetryCreateRequestQueryHeaders;
    /** URL Encoded string of the JSON to match to the data body */
    body?: Hookdeck.RequestBulkRetryCreateRequestQueryBody;
    /** URL Encoded string of the JSON to match to the parsed query (JSON representation of the query) */
    parsedQuery?: Hookdeck.RequestBulkRetryCreateRequestQueryParsedQuery;
    /** URL Encoded string of the value to match partially to the path */
    path?: string;
    /** Filter by count of ignored events */
    ignoredCount?: Hookdeck.RequestBulkRetryCreateRequestQueryIgnoredCount;
    /** Filter by count of events */
    eventsCount?: Hookdeck.RequestBulkRetryCreateRequestQueryEventsCount;
    /** Filter by event ingested date */
    ingestedAt?: Hookdeck.RequestBulkRetryCreateRequestQueryIngestedAt;
    bulkRetryId?: Hookdeck.RequestBulkRetryCreateRequestQueryBulkRetryId;
}
