/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Intercom from "../../../../api";
import * as core from "../../../../core";
import { EventBulkRetryCreateRequestQueryId } from "./EventBulkRetryCreateRequestQueryId";
import { EventBulkRetryCreateRequestQueryStatus } from "./EventBulkRetryCreateRequestQueryStatus";
import { EventBulkRetryCreateRequestQueryWebhookId } from "./EventBulkRetryCreateRequestQueryWebhookId";
import { EventBulkRetryCreateRequestQueryDestinationId } from "./EventBulkRetryCreateRequestQueryDestinationId";
import { EventBulkRetryCreateRequestQuerySourceId } from "./EventBulkRetryCreateRequestQuerySourceId";
import { EventBulkRetryCreateRequestQueryAttempts } from "./EventBulkRetryCreateRequestQueryAttempts";
import { EventBulkRetryCreateRequestQueryResponseStatus } from "./EventBulkRetryCreateRequestQueryResponseStatus";
import { EventBulkRetryCreateRequestQuerySuccessfulAt } from "./EventBulkRetryCreateRequestQuerySuccessfulAt";
import { EventBulkRetryCreateRequestQueryCreatedAt } from "./EventBulkRetryCreateRequestQueryCreatedAt";
import { EventBulkRetryCreateRequestQueryErrorCode } from "./EventBulkRetryCreateRequestQueryErrorCode";
import { EventBulkRetryCreateRequestQueryCliId } from "./EventBulkRetryCreateRequestQueryCliId";
import { EventBulkRetryCreateRequestQueryLastAttemptAt } from "./EventBulkRetryCreateRequestQueryLastAttemptAt";
import { EventBulkRetryCreateRequestQueryHeaders } from "./EventBulkRetryCreateRequestQueryHeaders";
import { EventBulkRetryCreateRequestQueryBody } from "./EventBulkRetryCreateRequestQueryBody";
import { EventBulkRetryCreateRequestQueryParsedQuery } from "./EventBulkRetryCreateRequestQueryParsedQuery";
import { EventBulkRetryCreateRequestQueryCliUserId } from "./EventBulkRetryCreateRequestQueryCliUserId";
import { EventBulkRetryCreateRequestQueryIssueId } from "./EventBulkRetryCreateRequestQueryIssueId";
import { EventBulkRetryCreateRequestQueryEventDataId } from "./EventBulkRetryCreateRequestQueryEventDataId";
import { EventBulkRetryCreateRequestQueryBulkRetryId } from "./EventBulkRetryCreateRequestQueryBulkRetryId";

export const EventBulkRetryCreateRequestQuery: core.serialization.ObjectSchema<
    serializers.EventBulkRetryCreateRequestQuery.Raw,
    Intercom.EventBulkRetryCreateRequestQuery
> = core.serialization.object({
    id: EventBulkRetryCreateRequestQueryId.optional(),
    status: EventBulkRetryCreateRequestQueryStatus.optional(),
    webhookId: core.serialization.property("webhook_id", EventBulkRetryCreateRequestQueryWebhookId.optional()),
    destinationId: core.serialization.property(
        "destination_id",
        EventBulkRetryCreateRequestQueryDestinationId.optional()
    ),
    sourceId: core.serialization.property("source_id", EventBulkRetryCreateRequestQuerySourceId.optional()),
    attempts: EventBulkRetryCreateRequestQueryAttempts.optional(),
    responseStatus: core.serialization.property(
        "response_status",
        EventBulkRetryCreateRequestQueryResponseStatus.optional()
    ),
    successfulAt: core.serialization.property("successful_at", EventBulkRetryCreateRequestQuerySuccessfulAt.optional()),
    createdAt: core.serialization.property("created_at", EventBulkRetryCreateRequestQueryCreatedAt.optional()),
    errorCode: core.serialization.property("error_code", EventBulkRetryCreateRequestQueryErrorCode.optional()),
    cliId: core.serialization.property("cli_id", EventBulkRetryCreateRequestQueryCliId.optional()),
    lastAttemptAt: core.serialization.property(
        "last_attempt_at",
        EventBulkRetryCreateRequestQueryLastAttemptAt.optional()
    ),
    searchTerm: core.serialization.property("search_term", core.serialization.string().optional()),
    headers: EventBulkRetryCreateRequestQueryHeaders.optional(),
    body: EventBulkRetryCreateRequestQueryBody.optional(),
    parsedQuery: core.serialization.property("parsed_query", EventBulkRetryCreateRequestQueryParsedQuery.optional()),
    path: core.serialization.string().optional(),
    cliUserId: core.serialization.property("cli_user_id", EventBulkRetryCreateRequestQueryCliUserId.optional()),
    issueId: core.serialization.property("issue_id", EventBulkRetryCreateRequestQueryIssueId.optional()),
    eventDataId: core.serialization.property("event_data_id", EventBulkRetryCreateRequestQueryEventDataId.optional()),
    bulkRetryId: core.serialization.property("bulk_retry_id", EventBulkRetryCreateRequestQueryBulkRetryId.optional()),
});

export declare namespace EventBulkRetryCreateRequestQuery {
    interface Raw {
        id?: EventBulkRetryCreateRequestQueryId.Raw | null;
        status?: EventBulkRetryCreateRequestQueryStatus.Raw | null;
        webhook_id?: EventBulkRetryCreateRequestQueryWebhookId.Raw | null;
        destination_id?: EventBulkRetryCreateRequestQueryDestinationId.Raw | null;
        source_id?: EventBulkRetryCreateRequestQuerySourceId.Raw | null;
        attempts?: EventBulkRetryCreateRequestQueryAttempts.Raw | null;
        response_status?: EventBulkRetryCreateRequestQueryResponseStatus.Raw | null;
        successful_at?: EventBulkRetryCreateRequestQuerySuccessfulAt.Raw | null;
        created_at?: EventBulkRetryCreateRequestQueryCreatedAt.Raw | null;
        error_code?: EventBulkRetryCreateRequestQueryErrorCode.Raw | null;
        cli_id?: EventBulkRetryCreateRequestQueryCliId.Raw | null;
        last_attempt_at?: EventBulkRetryCreateRequestQueryLastAttemptAt.Raw | null;
        search_term?: string | null;
        headers?: EventBulkRetryCreateRequestQueryHeaders.Raw | null;
        body?: EventBulkRetryCreateRequestQueryBody.Raw | null;
        parsed_query?: EventBulkRetryCreateRequestQueryParsedQuery.Raw | null;
        path?: string | null;
        cli_user_id?: EventBulkRetryCreateRequestQueryCliUserId.Raw | null;
        issue_id?: EventBulkRetryCreateRequestQueryIssueId.Raw | null;
        event_data_id?: EventBulkRetryCreateRequestQueryEventDataId.Raw | null;
        bulk_retry_id?: EventBulkRetryCreateRequestQueryBulkRetryId.Raw | null;
    }
}
