/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Hookdeck from "../../../../api/index";
import * as core from "../../../../core";
import { RequestBulkRetryCreateRequestQueryId } from "./RequestBulkRetryCreateRequestQueryId";
import { RequestBulkRetryCreateRequestQueryStatus } from "./RequestBulkRetryCreateRequestQueryStatus";
import { RequestBulkRetryCreateRequestQueryRejectionCause } from "./RequestBulkRetryCreateRequestQueryRejectionCause";
import { RequestBulkRetryCreateRequestQuerySourceId } from "./RequestBulkRetryCreateRequestQuerySourceId";
import { RequestBulkRetryCreateRequestQueryHeaders } from "./RequestBulkRetryCreateRequestQueryHeaders";
import { RequestBulkRetryCreateRequestQueryBody } from "./RequestBulkRetryCreateRequestQueryBody";
import { RequestBulkRetryCreateRequestQueryParsedQuery } from "./RequestBulkRetryCreateRequestQueryParsedQuery";
import { RequestBulkRetryCreateRequestQueryIgnoredCount } from "./RequestBulkRetryCreateRequestQueryIgnoredCount";
import { RequestBulkRetryCreateRequestQueryEventsCount } from "./RequestBulkRetryCreateRequestQueryEventsCount";
import { RequestBulkRetryCreateRequestQueryIngestedAt } from "./RequestBulkRetryCreateRequestQueryIngestedAt";
import { RequestBulkRetryCreateRequestQueryBulkRetryId } from "./RequestBulkRetryCreateRequestQueryBulkRetryId";

export const RequestBulkRetryCreateRequestQuery: core.serialization.ObjectSchema<
    serializers.RequestBulkRetryCreateRequestQuery.Raw,
    Hookdeck.RequestBulkRetryCreateRequestQuery
> = core.serialization.object({
    id: RequestBulkRetryCreateRequestQueryId.optional(),
    status: RequestBulkRetryCreateRequestQueryStatus.optional(),
    rejectionCause: core.serialization.property(
        "rejection_cause",
        RequestBulkRetryCreateRequestQueryRejectionCause.optional()
    ),
    sourceId: core.serialization.property("source_id", RequestBulkRetryCreateRequestQuerySourceId.optional()),
    verified: core.serialization.boolean().optional(),
    searchTerm: core.serialization.property("search_term", core.serialization.string().optional()),
    headers: RequestBulkRetryCreateRequestQueryHeaders.optional(),
    body: RequestBulkRetryCreateRequestQueryBody.optional(),
    parsedQuery: core.serialization.property("parsed_query", RequestBulkRetryCreateRequestQueryParsedQuery.optional()),
    path: core.serialization.string().optional(),
    ignoredCount: core.serialization.property(
        "ignored_count",
        RequestBulkRetryCreateRequestQueryIgnoredCount.optional()
    ),
    eventsCount: core.serialization.property("events_count", RequestBulkRetryCreateRequestQueryEventsCount.optional()),
    ingestedAt: core.serialization.property("ingested_at", RequestBulkRetryCreateRequestQueryIngestedAt.optional()),
    bulkRetryId: core.serialization.property("bulk_retry_id", RequestBulkRetryCreateRequestQueryBulkRetryId.optional()),
});

export declare namespace RequestBulkRetryCreateRequestQuery {
    interface Raw {
        id?: RequestBulkRetryCreateRequestQueryId.Raw | null;
        status?: RequestBulkRetryCreateRequestQueryStatus.Raw | null;
        rejection_cause?: RequestBulkRetryCreateRequestQueryRejectionCause.Raw | null;
        source_id?: RequestBulkRetryCreateRequestQuerySourceId.Raw | null;
        verified?: boolean | null;
        search_term?: string | null;
        headers?: RequestBulkRetryCreateRequestQueryHeaders.Raw | null;
        body?: RequestBulkRetryCreateRequestQueryBody.Raw | null;
        parsed_query?: RequestBulkRetryCreateRequestQueryParsedQuery.Raw | null;
        path?: string | null;
        ignored_count?: RequestBulkRetryCreateRequestQueryIgnoredCount.Raw | null;
        events_count?: RequestBulkRetryCreateRequestQueryEventsCount.Raw | null;
        ingested_at?: RequestBulkRetryCreateRequestQueryIngestedAt.Raw | null;
        bulk_retry_id?: RequestBulkRetryCreateRequestQueryBulkRetryId.Raw | null;
    }
}
