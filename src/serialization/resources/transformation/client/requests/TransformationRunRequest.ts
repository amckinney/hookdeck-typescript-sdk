/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as Hookdeck from "../../../../../api/index";
import * as core from "../../../../../core";
import { TransformationRunRequestRequest } from "../../types/TransformationRunRequestRequest";

export const TransformationRunRequest: core.serialization.Schema<
    serializers.TransformationRunRequest.Raw,
    Hookdeck.TransformationRunRequest
> = core.serialization.object({
    env: core.serialization.record(core.serialization.string(), core.serialization.string()).optional(),
    webhookId: core.serialization.property("webhook_id", core.serialization.string().optional()),
    code: core.serialization.string().optional(),
    transformationId: core.serialization.property("transformation_id", core.serialization.string().optional()),
    request: TransformationRunRequestRequest.optional(),
    eventId: core.serialization.property("event_id", core.serialization.string().optional()),
});

export declare namespace TransformationRunRequest {
    interface Raw {
        env?: Record<string, string> | null;
        webhook_id?: string | null;
        code?: string | null;
        transformation_id?: string | null;
        request?: TransformationRunRequestRequest.Raw | null;
        event_id?: string | null;
    }
}
