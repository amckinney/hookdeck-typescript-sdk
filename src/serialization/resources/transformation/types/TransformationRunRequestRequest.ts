/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Intercom from "../../../../api";
import * as core from "../../../../core";
import { TransformationRunRequestRequestBody } from "./TransformationRunRequestRequestBody";
import { TransformationRunRequestRequestParsedQuery } from "./TransformationRunRequestRequestParsedQuery";

export const TransformationRunRequestRequest: core.serialization.ObjectSchema<
    serializers.TransformationRunRequestRequest.Raw,
    Intercom.TransformationRunRequestRequest
> = core.serialization.object({
    headers: core.serialization.record(core.serialization.string(), core.serialization.string()),
    body: TransformationRunRequestRequestBody.optional(),
    path: core.serialization.string().optional(),
    query: core.serialization.string().optional(),
    parsedQuery: core.serialization.property("parsed_query", TransformationRunRequestRequestParsedQuery.optional()),
});

export declare namespace TransformationRunRequestRequest {
    interface Raw {
        headers: Record<string, string>;
        body?: TransformationRunRequestRequestBody.Raw | null;
        path?: string | null;
        query?: string | null;
        parsed_query?: TransformationRunRequestRequestParsedQuery.Raw | null;
    }
}
