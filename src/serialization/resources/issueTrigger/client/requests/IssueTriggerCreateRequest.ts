/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as Hookdeck from "../../../../../api/index";
import * as core from "../../../../../core";
import { IssueType } from "../../../../types/IssueType";
import { IssueTriggerCreateRequestConfigs } from "../../types/IssueTriggerCreateRequestConfigs";
import { IssueTriggerChannels } from "../../../../types/IssueTriggerChannels";

export const IssueTriggerCreateRequest: core.serialization.Schema<
    serializers.IssueTriggerCreateRequest.Raw,
    Hookdeck.IssueTriggerCreateRequest
> = core.serialization.object({
    type: IssueType,
    configs: IssueTriggerCreateRequestConfigs.optional(),
    channels: IssueTriggerChannels.optional(),
    name: core.serialization.string().optional(),
});

export declare namespace IssueTriggerCreateRequest {
    interface Raw {
        type: IssueType.Raw;
        configs?: IssueTriggerCreateRequestConfigs.Raw | null;
        channels?: IssueTriggerChannels.Raw | null;
        name?: string | null;
    }
}
