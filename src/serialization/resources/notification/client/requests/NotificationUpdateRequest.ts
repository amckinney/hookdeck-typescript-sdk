/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import * as Intercom from "../../../../../api";
import * as core from "../../../../../core";
import { TopicsValue } from "../../../../types/TopicsValue";

export const NotificationUpdateRequest: core.serialization.Schema<
    serializers.NotificationUpdateRequest.Raw,
    Intercom.NotificationUpdateRequest
> = core.serialization.object({
    enabled: core.serialization.boolean().optional(),
    topics: core.serialization.list(TopicsValue).optional(),
    sourceId: core.serialization.property("source_id", core.serialization.string().optional()),
});

export declare namespace NotificationUpdateRequest {
    interface Raw {
        enabled?: boolean | null;
        topics?: TopicsValue.Raw[] | null;
        source_id?: string | null;
    }
}
