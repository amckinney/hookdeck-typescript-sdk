/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Hookdeck from "../../api/index";
import * as core from "../../core";
import { DeliveryIssueWithData } from "./DeliveryIssueWithData";
import { TransformationIssueWithData } from "./TransformationIssueWithData";

export const IssueWithData: core.serialization.Schema<serializers.IssueWithData.Raw, Hookdeck.IssueWithData> =
    core.serialization
        .union("type", {
            delivery: DeliveryIssueWithData,
            transformation: TransformationIssueWithData,
        })
        .transform<Hookdeck.IssueWithData>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace IssueWithData {
    type Raw = IssueWithData.Delivery | IssueWithData.Transformation;

    interface Delivery extends DeliveryIssueWithData.Raw {
        type: "delivery";
    }

    interface Transformation extends TransformationIssueWithData.Raw {
        type: "transformation";
    }
}
