/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Hookdeck from "../../api";
import * as core from "../../core";
import { ShortEventDataParsedQuery } from "./ShortEventDataParsedQuery";
import { ShortEventDataHeaders } from "./ShortEventDataHeaders";
import { ShortEventDataBody } from "./ShortEventDataBody";

export const ShortEventData: core.serialization.ObjectSchema<serializers.ShortEventData.Raw, Hookdeck.ShortEventData> =
    core.serialization.object({
        path: core.serialization.string(),
        query: core.serialization.string().optional(),
        parsedQuery: core.serialization.property("parsed_query", ShortEventDataParsedQuery.optional()),
        headers: ShortEventDataHeaders.optional(),
        body: ShortEventDataBody.optional(),
        isLargePayload: core.serialization.property("is_large_payload", core.serialization.boolean().optional()),
    });

export declare namespace ShortEventData {
    interface Raw {
        path: string;
        query?: string | null;
        parsed_query?: ShortEventDataParsedQuery.Raw | null;
        headers?: ShortEventDataHeaders.Raw | null;
        body?: ShortEventDataBody.Raw | null;
        is_large_payload?: boolean | null;
    }
}
