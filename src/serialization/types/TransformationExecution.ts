/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Intercom from "../../api";
import * as core from "../../core";
import { TransformationExecutionLogLevel } from "./TransformationExecutionLogLevel";
import { ConsoleLine } from "./ConsoleLine";
import { ShortEventData } from "./ShortEventData";

export const TransformationExecution: core.serialization.ObjectSchema<
    serializers.TransformationExecution.Raw,
    Intercom.TransformationExecution
> = core.serialization.object({
    id: core.serialization.string(),
    transformedEventDataId: core.serialization.property("transformed_event_data_id", core.serialization.string()),
    originalEventDataId: core.serialization.property("original_event_data_id", core.serialization.string()),
    transformationId: core.serialization.property("transformation_id", core.serialization.string()),
    teamId: core.serialization.property("team_id", core.serialization.string()),
    webhookId: core.serialization.property("webhook_id", core.serialization.string()),
    logLevel: core.serialization.property("log_level", TransformationExecutionLogLevel),
    logs: core.serialization.list(ConsoleLine),
    updatedAt: core.serialization.property("updated_at", core.serialization.date()),
    createdAt: core.serialization.property("created_at", core.serialization.date()),
    originalEventData: core.serialization.property("original_event_data", ShortEventData.optional()),
    transformedEventData: core.serialization.property("transformed_event_data", ShortEventData.optional()),
    issueId: core.serialization.property("issue_id", core.serialization.string().optional()),
});

export declare namespace TransformationExecution {
    interface Raw {
        id: string;
        transformed_event_data_id: string;
        original_event_data_id: string;
        transformation_id: string;
        team_id: string;
        webhook_id: string;
        log_level: TransformationExecutionLogLevel.Raw;
        logs: ConsoleLine.Raw[];
        updated_at: string;
        created_at: string;
        original_event_data?: ShortEventData.Raw | null;
        transformed_event_data?: ShortEventData.Raw | null;
        issue_id?: string | null;
    }
}
