/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Intercom from "../../api";
import * as core from "../../core";
import { AuthHookdeckSignature } from "./AuthHookdeckSignature";
import { AuthBasicAuth } from "./AuthBasicAuth";
import { AuthApiKey } from "./AuthApiKey";
import { AuthBearerToken } from "./AuthBearerToken";
import { AuthOAuth2ClientCredentials } from "./AuthOAuth2ClientCredentials";
import { AuthOAuth2AuthorizationCode } from "./AuthOAuth2AuthorizationCode";
import { AuthCustomSignature } from "./AuthCustomSignature";

export const DestinationAuthMethodConfig: core.serialization.Schema<
    serializers.DestinationAuthMethodConfig.Raw,
    Intercom.DestinationAuthMethodConfig
> = core.serialization
    .union("type", {
        HOOKDECK_SIGNATURE: AuthHookdeckSignature,
        BASIC_AUTH: AuthBasicAuth,
        API_KEY: AuthApiKey,
        BEARER_TOKEN: AuthBearerToken,
        OAUTH2_CLIENT_CREDENTIALS: AuthOAuth2ClientCredentials,
        OAUTH2_AUTHORIZATION_CODE: AuthOAuth2AuthorizationCode,
        CUSTOM_SIGNATURE: AuthCustomSignature,
    })
    .transform<Intercom.DestinationAuthMethodConfig>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace DestinationAuthMethodConfig {
    type Raw =
        | DestinationAuthMethodConfig.HookdeckSignature
        | DestinationAuthMethodConfig.BasicAuth
        | DestinationAuthMethodConfig.ApiKey
        | DestinationAuthMethodConfig.BearerToken
        | DestinationAuthMethodConfig.Oauth2ClientCredentials
        | DestinationAuthMethodConfig.Oauth2AuthorizationCode
        | DestinationAuthMethodConfig.CustomSignature;

    interface HookdeckSignature extends AuthHookdeckSignature.Raw {
        type: "HOOKDECK_SIGNATURE";
    }

    interface BasicAuth extends AuthBasicAuth.Raw {
        type: "BASIC_AUTH";
    }

    interface ApiKey extends AuthApiKey.Raw {
        type: "API_KEY";
    }

    interface BearerToken extends AuthBearerToken.Raw {
        type: "BEARER_TOKEN";
    }

    interface Oauth2ClientCredentials extends AuthOAuth2ClientCredentials.Raw {
        type: "OAUTH2_CLIENT_CREDENTIALS";
    }

    interface Oauth2AuthorizationCode extends AuthOAuth2AuthorizationCode.Raw {
        type: "OAUTH2_AUTHORIZATION_CODE";
    }

    interface CustomSignature extends AuthCustomSignature.Raw {
        type: "CUSTOM_SIGNATURE";
    }
}
