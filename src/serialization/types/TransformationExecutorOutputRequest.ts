/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Hookdeck from "../../api";
import * as core from "../../core";
import { TransformationExecutorOutputRequestHeaders } from "./TransformationExecutorOutputRequestHeaders";
import { TransformationExecutorOutputRequestQuery } from "./TransformationExecutorOutputRequestQuery";
import { TransformationExecutorOutputRequestParsedQuery } from "./TransformationExecutorOutputRequestParsedQuery";
import { TransformationExecutorOutputRequestBody } from "./TransformationExecutorOutputRequestBody";

export const TransformationExecutorOutputRequest: core.serialization.ObjectSchema<
    serializers.TransformationExecutorOutputRequest.Raw,
    Hookdeck.TransformationExecutorOutputRequest
> = core.serialization.object({
    headers: TransformationExecutorOutputRequestHeaders.optional(),
    path: core.serialization.string(),
    query: TransformationExecutorOutputRequestQuery.optional(),
    parsedQuery: core.serialization.property("parsed_query", TransformationExecutorOutputRequestParsedQuery.optional()),
    body: TransformationExecutorOutputRequestBody.optional(),
});

export declare namespace TransformationExecutorOutputRequest {
    interface Raw {
        headers?: TransformationExecutorOutputRequestHeaders.Raw | null;
        path: string;
        query?: TransformationExecutorOutputRequestQuery.Raw | null;
        parsed_query?: TransformationExecutorOutputRequestParsedQuery.Raw | null;
        body?: TransformationExecutorOutputRequestBody.Raw | null;
    }
}
